name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: signupdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd backend
          npm install
      - name: setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      
      - name: Cache sonar package
        uses: actions/cache@v3
        with: 
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
      - name: Run sonar
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          export PATH="$PWD/sonar-scanner-5.0.1.3006-linux/bin:$PATH"
          sonar-scanner \
            -Dsonar.projectKey=my-project \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=sqp_2daee56812eb85f9c6c43ae5c72d184beefb68bc \
      - name: Export to json
        run: |
          curl -s -u sqp_2daee56812eb85f9c6c43ae5c72d184beefb68bc: \
            "http://localhost:9000/api/issues/search?componentsKeys=my-project" > sonar-issues.json
      
      - name: Upload sonar artifact
        uses: actions/upload-artifact@v4
        with:
          name: sonar-report
          path: sonar-report