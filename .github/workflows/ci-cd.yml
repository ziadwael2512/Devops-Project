name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: signupdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd backend
          npm install
      
      - name: install trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.50.2_Linux-64bit.deb
          sudo dpkg -i trivy_0.50.2_Linux-64bit.deb
      
      - name: run trivy
        run: |
          mkdir -p results
          trivy fs . --format json --output results/result.json
      
      
      
      - name: Upload trivy artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: results/result.json
  
  push-artifact-to-branch:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: trivy-report
          path: security-report-result
      

    
      - name: configure git
        run: |
          git config --global user.name "Action"
          git config --global user.email "action@mail.com"
      
      - name: Prepare log branch
        run: |
          git fetch origin 
          git switch logs || git switch --create logs
          mkdir -p reports
          cp security-report-result/result.json reports/trivy-scan-${{ github.run_id }}-$(date +'%Y-%m-%d-%H%M%S').json
          git add reports/
          git commit -m "Add report from $(date)"
          git push origin logs